# trigger:
#   branches:
#     include:
#       - main

# pool:
#   name: Default  # Replace 'Default' with the name of your self-hosted agent pool.

# steps:
# - checkout: self
#   fetchDepth: 1

# - task: NodeTool@0
#   inputs:
#     versionSpec: '16.x'
#     addToPath: true

# - script: |
#     npm install
#     npm run build
#   displayName: 'Install Dependencies and Build'

# - script: |
#     npm test
#   displayName: 'Run Tests'

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: 'drop'
#     publishLocation: 'Container'

# - script: |
#     curl -X POST -H "Authorization: Bearer $(RENDER_API_KEY)" \
#     -H "Content-Type: application/json" \
#     -d '{"serviceId": "azure-cicd", "clearCache": true}' \
#     "https://api.render.com/v1/services/azure-cicd/deploy"
#   displayName: 'Trigger Deploy on Render'












# trigger:
#   branches:
#     include:
#       - main

# pool:
#   name: Default  # Replace 'Default' with the name of your self-hosted agent pool.

# steps:
# - checkout: self
#   fetchDepth: 1

# - task: NodeTool@0
#   inputs:
#     versionSpec: '16.x'
#     addToPath: true

# - script: |
#     npm install
#     npm run build
#   displayName: 'Install Dependencies and Build'

# - script: |
#     npm test
#   displayName: 'Run Tests'

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: 'drop'
#     publishLocation: 'Container'

# - script: |
#     curl -X POST https://api.render.com/v1/services/azure-cicd/deploy ^
#     -H "Authorization: Bearer $(RENDER_API_KEY)" ^
#     -H "Content-Type: application/json" ^
#     -d "{\"serviceId\": \"azure-cicd\", \"clearCache\": true}"
#   displayName: 'Trigger Deploy on Render'






# trigger:
#   branches:
#     include:
#       - main

# pool:
#   name: Default  # Use your self-hosted agent pool.

# variables:
#   DOCKER_IMAGE_NAME: kawtark413/az-cicd  # Replace with your Docker Hub repository.

# steps:
# # Step 1: Checkout the source code
# - checkout: self
#   fetchDepth: 1

# # Step 2: Install dependencies and build the app
# - task: NodeTool@0
#   inputs:
#     versionSpec: '16.x'
#     addToPath: true

# - script: |
#     npm install
#     npm run build
#   displayName: 'Install Dependencies and Build'

# # Step 3: Build the Docker image
# - script: |
#     docker build -t $(DOCKER_IMAGE_NAME):$(Build.BuildId) .
#     docker tag $(DOCKER_IMAGE_NAME):$(Build.BuildId) $(DOCKER_IMAGE_NAME):latest
#   displayName: 'Build Docker Image'

# # Step 4: Push Docker image to Docker Hub
# - task: Docker@2
#   inputs:
#     containerRegistry: 'az-dockerhub-connection'
#     repository: $(DOCKER_IMAGE_NAME)
#     command: push
#     tags: |
#       $(Build.BuildId)
#       latest
#   displayName: 'Push Docker Image'

# # Step 5: Trigger deployment on Render
# - script: |
#     curl -X POST -H "Authorization: Bearer $(RENDER_API_KEY)" \
#     -H "Content-Type: application/json" \
#     -d '{"clearCache": true, "dockerImage": "$(DOCKER_IMAGE_NAME):latest"}' \
#     "https://api.render.com/v1/services/azure-cicd/deploy"
#   displayName: 'Trigger Deploy on Render'





# trigger:
#   branches:
#     include:
#       - main

# pool:
#   name: Default  # Replace 'Default' with your self-hosted agent pool name.

# steps:
# - checkout: self
#   fetchDepth: 1

# - task: NodeTool@0
#   inputs:
#     versionSpec: '16.x'
#     addToPath: true

# - script: |
#     npm install
#     npm run build
#   displayName: 'Install Dependencies and Build'

# - script: |
#     npm test
#   displayName: 'Run Tests'

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: 'drop'
#     publishLocation: 'Container'

# - script: |
#     curl -X POST -H "Authorization: Bearer $(RENDER_API_KEY)" -H "Content-Type: application/json" -d "{\"serviceId\": \"az-cicd\", \"clearCache\": true}" "https://api.render.com/v1/services/az-cicd/deploy"
#   displayName: 'Trigger Deploy on Render'





# trigger:
#   branches:
#     include:
#       - main

# pool:
#   name: Default  # Use the self-hosted agent or change to 'ubuntu-latest' if using a Microsoft-hosted agent.

# variables:
#   DOCKER_IMAGE_NAME: "kawtark413/az-cicd"  # Replace with your Docker image name.

# steps:
# - checkout: self
#   fetchDepth: 1

# # Step 1: Build the Docker image
# - task: Docker@2
#   displayName: 'Build Docker Image'
#   inputs:
#     command: build
#     repository: $(DOCKER_IMAGE_NAME)
#     tags: latest

# # Step 2: Push the Docker image to Docker Hub
# - task: Docker@2
#   displayName: 'Push Docker Image'
#   inputs:
#     command: push
#     repository: $(DOCKER_IMAGE_NAME)
#     tags: latest
#     containerRegistry: az-dockerhub-connection  # Replace with your Azure DevOps Docker service connection.

# # Step 3: Trigger deployment on Render
# # - script: |
# #     curl -X POST -H "Authorization: Bearer $(RENDER_API_KEY)" \
# #     -H "Content-Type: application/json" \
# #     -d '{"serviceId": "az-cicd", "clearCache": true}' \
# #     "https://api.render.com/v1/services/az-cicd/deploy"
# #   displayName: 'Trigger Deploy on Render'
# - script: |
#     curl -X POST -H "Authorization: Bearer $(RENDER_API_KEY)" -H "Content-Type: application/json" -d "{\"serviceId\": \"az-cicd\", \"clearCache\": true}" "https://api.render.com/v1/services/az-cicd/deploy"
#   displayName: 'Trigger Deploy on Render'



trigger:
  branches:
    include:
      - main

pool:
  name: Default  # Replace with your self-hosted agent pool name if needed.

steps:
- checkout: self
  fetchDepth: 1

- task: Docker@2
  inputs:
    containerRegistry: 'az-dockerhub-connection'  # Replace with your Docker registry connection.
    repository: 'kawtark413/az-cicd'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'

- script: |
    curl -X POST -H "Authorization: Bearer $(RENDER_API_KEY)" \
    -H "Content-Type: application/json" \
    -d "{\"serviceId\": \"az-cicd\", \"clearCache\": true}" \
    "https://api.render.com/v1/services/az-cicd/deploy"
  displayName: 'Trigger Deploy on Render'
